{"version":3,"sources":["components/Filter.js","components/TableContainer.js","components/App.js","index.js"],"names":["Filter","column","style","marginTop","canFilter","render","DefaultColumnFilter","filterValue","setFilter","length","preFilteredRows","Input","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","id","options","React","useMemo","Set","forEach","row","add","values","CustomInput","type","map","option","TableContainer","columns","data","renderRowSubComponent","useTable","defaultColumn","initialState","pageIndex","pageSize","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","generateSortingIndicator","isSorted","isSortedDesc","Table","bordered","hover","backgroundColor","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","cells","cell","getCellProps","isExpanded","colSpan","getRowProps","key","Row","maxWidth","margin","textAlign","Col","md","Button","color","onClick","disabled","min","width","max","defaultValue","event","Number","App","useState","setData","useEffect","a","fetch","response","json","body","contacts","results","console","log","doFetch","Header","Cell","getToggleRowExpandedProps","accessor","disableSortBy","filter","Container","className","original","name","first","last","location","city","street","postcode","picture","Card","CardImg","top","src","large","alt","CardBody","CardTitle","CardText","number","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c9e467a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input, CustomInput } from 'reactstrap';\r\n\r\nexport const Filter = ({ column }) => {\r\n  return (\r\n    <div style={{ marginTop: 5 }}>\r\n      {column.canFilter && column.render('Filter')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DefaultColumnFilter = ({\r\n  column: {\r\n    filterValue,\r\n    setFilter,\r\n    preFilteredRows: { length },\r\n  },\r\n}) => {\r\n  return (\r\n    <Input\r\n      value={filterValue || ''}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`search (${length}) ...`}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SelectColumnFilter = ({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) => {\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <CustomInput\r\n      id='custom-select'\r\n      type='select'\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    >\r\n      <option value=''>All</option>\r\n      {options.map((option) => (\r\n        <option key={option} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </CustomInput>\r\n  );\r\n};","import React, { Fragment } from 'react';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useFilters,\r\n  useExpanded,\r\n  usePagination,\r\n} from 'react-table';\r\nimport { Table, Row, Col, Button, Input, CustomInput } from 'reactstrap';\r\nimport { Filter, DefaultColumnFilter } from './Filter';\r\n\r\nconst TableContainer = ({ columns, data, renderRowSubComponent }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    visibleColumns,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn: { Filter: DefaultColumnFilter },\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination\r\n  );\r\n\r\n  const generateSortingIndicator = (column) => {\r\n    return column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : '';\r\n  };\r\n\r\n  const onChangeInSelect = (event) => {\r\n    setPageSize(Number(event.target.value));\r\n  };\r\n\r\n  const onChangeInInput = (event) => {\r\n    const page = event.target.value ? Number(event.target.value) - 1 : 0;\r\n    gotoPage(page);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Table bordered hover style={{backgroundColor: \"yellowgreen\"}}{...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  <div {...column.getSortByToggleProps()}>\r\n                    {column.render('Header')}\r\n                    {generateSortingIndicator(column)}\r\n                  </div>\r\n                  <Filter column={column} />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <Fragment key={row.getRowProps().key}>\r\n                <tr>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n                {row.isExpanded && (\r\n                  <tr>\r\n                    <td colSpan={visibleColumns.length}>\r\n                      {renderRowSubComponent(row)}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Row style={{ maxWidth: 1000, margin: '0 auto', textAlign: 'center' }}>\r\n        <Col md={3}>\r\n          <Button\r\n            color='success'\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {'<<'}\r\n          </Button>\r\n          <Button\r\n            color='success'\r\n            onClick={previousPage}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {'<'}\r\n          </Button>\r\n        </Col>\r\n        <Col md={2} style={{ marginTop: 7 }}>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </Col>\r\n        <Col md={2}>\r\n          <Input\r\n            type='number'\r\n            min={1}\r\n            style={{ width: 70 }}\r\n            max={pageOptions.length}\r\n            defaultValue={pageIndex + 1}\r\n            onChange={onChangeInInput}\r\n          />\r\n        </Col>\r\n        <Col md={2}>\r\n          <CustomInput\r\n            type='select'\r\n            value={pageSize}\r\n            onChange={onChangeInSelect}\r\n          >\r\n            \r\n            {[10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </CustomInput>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Button color='success' onClick={nextPage} disabled={!canNextPage}>\r\n            {'>'}\r\n          </Button>\r\n          <Button\r\n            color='success'\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {'>>'}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TableContainer;","import React, { useEffect, useState, useMemo } from 'react';\nimport {\n  Container,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n} from 'reactstrap';\nimport TableContainer from './TableContainer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SelectColumnFilter } from './Filter';\nimport './App.css';\n\n \n\nconst App = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const doFetch = async () => {\n      const response = await fetch('https://randomuser.me/api/?results=200&nat=us');\n      const body = await response.json();\n      const contacts = body.results;\n      console.log(contacts);\n      setData(contacts);\n    };\n    doFetch();\n  }, []);\n\n  const renderRowSubComponent = (row) => {\n    const {\n      name: { first, last },\n      location: { city, street, postcode, state },\n      picture,\n      cell,\n    } = row.original;\n    return (\n      <Card className='Card'>\n        <CardImg top src={picture.large} alt='Card image cap' />\n        <CardBody>\n          <CardTitle>\n            <strong>{`${first} ${last}`} </strong>\n          </CardTitle>\n          <CardText>\n            <strong>Phone</strong>: {cell} <br />\n            <strong>Address:</strong>{' '}\n            {`${street.number} ${street.name}`}\n            <br></br>\n            {`${city}, ${state}  ${postcode}`}\n          </CardText>\n        </CardBody>\n      </Card>\n    );\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: () => null,\n        id: 'expander', // 'id' is required\n        Cell: ({ row }) => (\n          <span {...row.getToggleRowExpandedProps()}>\n            {row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\n          </span>\n        ),\n      },\n      \n      {\n        Header: 'Title',\n        accessor: 'name.title',\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: 'equals',\n      },\n      {\n        Header: 'First Name',\n        accessor: 'name.first',\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'name.last',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n      {\n        Header: 'State',\n        accessor: 'location.state',\n      },\n      {\n        Header:   'Year(s) with Company',\n        accessor: 'registered.age',\n      }\n    ]\n   \n \n \n \n);\n  return (\n    \n    <Container className='Container'>\n    <div >\n    <header className='App'>  \n    <h1 className='App-h1'>Hicks Enterprise</h1></header>\n    <h2 className='App-h2'>Employee Directory</h2>\n    </div>\n      <TableContainer\n        columns={columns}\n        data={data}\n        renderRowSubComponent={renderRowSubComponent}\n       />\n    \n    </Container>\n  );\n  }\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}